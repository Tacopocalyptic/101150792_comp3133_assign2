#---------------------------------------
# 1. docker-compose -p comp3133-assign2 -f docker-compose.yml up -d
#   -- This command will start containers in detached mode without rebuilding the images (if they already exist)
#
# 2. docker-compose -p comp3133-assign2 -f docker-compose.yml up -d --build
#   -- This command forces the image to rebuild before starting the container. Run after changes.
#---------------------------------------

services:
  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./frontend
  #     dockerfile: ./DockerFile
  #   ports:
  #    - "4200:4200"
  #   depends_on:
  #     - graphql-backend
  #   environment:
  #     BACKEND_URL: http://graphql-backend:5000
  #   networks:
  #     - my-network

  graphql-backend:
    container_name: graphql-backend
    build:
      context: ./graphql-backend
      dockerfile: ./DockerFile
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    environment:
      DB_URL: mongodb://mongodb:27017/comp3133__101150792_assigment2
    networks:
      - my-network

  mongodb:
    image: mongo:latest
    container_name: mongodb-comp3133 # must be unique
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=comp3133__101150792_assigment2
    volumes: # persistent storage
      - ./data:/data/db
    #restart: unless-stopped    # keep trying to start until it works
    #command: mongod -auth      # enforces authorization
    networks:
      - my-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express-comp3133
    ports:
      - "8083:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    networks:
      - my-network

volumes:
  data:

networks:
  my-network:
    driver: bridge
